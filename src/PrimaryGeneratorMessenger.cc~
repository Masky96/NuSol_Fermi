#include "G4UIdirectory.hh"
#include "G4UIcmdWithADoubleAndUnit.hh"
#include "G4UIcmdWithAString.hh"

#include "LXePrimaryGeneratorAction.hh"
#include "PrimaryGeneratorMessenger.hh"

namespace User{

  //....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

  PrimaryGeneratorMessenger::PrimaryGeneratorMessenger(NuSolarPrimaryGeneratorAction* Gun)
    :Action(Gun)
  {
    gunDir = new G4UIdirectory("/ans/gun/");
    gunDir->SetGuidance("PrimaryGenerator control");
   
    polarCmd = new G4UIcmdWithADoubleAndUnit("/ans/gun/optPhotonPolar",this);
    polarCmd->SetGuidance("Set linear polarization");
    polarCmd->SetGuidance("  angle w.r.t. (k,n) plane");
    polarCmd->SetParameterName("angle",true);
    polarCmd->SetUnitCategory("Angle");  
    polarCmd->SetDefaultValue(0.);
    polarCmd->AvailableForStates(G4State_Idle);
 
  }


  //....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

  PrimaryGeneratorMessenger::~PrimaryGeneratorMessenger()
  {
    delete polarCmd;
    delete gunDir;
  }

  //....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

  void PrimaryGeneratorMessenger::SetNewValue(
					      G4UIcommand* command, G4String newValue)
  { 
    if( command == polarCmd )
      { Action->SetOptPhotonPolar(polarCmd->GetNewDoubleValue(newValue));}
  
  }


  //....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

} //end User namespace
